HTTP stands for hypertext transfer protocol & it is used in client-server communication. 
Web performance under HTTP1.1 vs HTTP2 is discussed in detail in the context of Prioritization, Multiplexing, Server push and Header compression

Prioritization: In the context of web performance, prioritization refers to the order in which pieces of content are loaded. HTTP/2 offers a feature called weighted prioritization. This allows developers to decide which page resources will load first, every time. In HTTP/2, when a client makes a request for a webpage, the server sends several streams of data to the client at once, instead of sending one thing after another. This method of data delivery is known as multiplexing. Developers can assign each of these data streams a different weighted value, and the value tells the client which data stream to render first. In HTTP/2, developers have hands-on, detailed control over prioritization. This allows them to maximize perceived and actual page load speed to a degree that was not possible in HTTP/1.1.

Multiplexing: HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it. In contrast, HTTP/2 is able to use a single TCP connection to send multiple streams of data at once so that no one resource blocks any other resource. HTTP/2 does this by splitting data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to.

Server push: Typically, a server only serves content to a client device if the client asks for it. However, this approach is not always practical for modern webpages, which often involve several dozen separate resources that the client must request. HTTP/2 solves this problem by allowing a server to "push" content to a client before the client asks for it. The server also sends a message letting the client know what pushed content to expect â€“ like if Bob had sent Alice a Table of Contents of his novel before sending the whole thing.

Header compression: Small files load more quickly than large ones. To speed up web performance, both HTTP/1.1 and HTTP/2 compress HTTP messages to make them smaller. However, HTTP/2 uses a more advanced compression method called HPACK that eliminates redundant information in HTTP header packets. This eliminates a few bytes from every HTTP packet. Given the volume of HTTP packets involved in loading even a single webpage, those bytes add up quickly, resulting in faster loading.

Key Differences between HTTP1.1 and HTTP 2 -

HTTP 1.1 :
 - Released in 1997.
 - keeps all requests and responses in plain text format.
 - HTTP/1.1 loads resources one after the other, so if one resource cannot be loaded, it blocks all the other resources behind it. This is head of line blocking, that blocks all the requests behind it until the current request gets all its resources.
 - It uses requests resource Inlining for use getting multiple pages.
 - It compresses data by itself.

HTTP 2 :
 - Released in 2015.
 - Uses the binary framing layer to encapsulate all messages in binary format, splitting data into binary-code messages and numbering these messages so that the client knows which stream each binary message belongs to while still maintaining HTTP semantics, such as verbs, methods, and headers allowing for significantly different delivery model possibilities. 
 - improved speed over HTTP/1.1
 - It allows multiplexing so one TCP connection is required for multiple requests. 
 - It uses PUSH frame by server that collects all multiple pages 
 - It uses HPACK for data compression.